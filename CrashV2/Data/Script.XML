repeat wait() until game.IsLoaded
repeat wait() until game.Players.LocalPlayer

local DataFolder = game:HttpGet("https://raw.githubusercontent.com/R00T66/DaHood/main/CrashV2/Data/DataFolder.XML"); DataFolder = loadstring(DataFolder)()
local Hook; Hook = hookmetamethod(game, "__namecall", function(self, ...)
    local Args = { ... }
    local Method = getnamecallmethod()

    if Method == "FireServer" or Method:lower() == "fireserver" then
       if self.Name == "MainEvent" or self.Name:lower() == "mainevent" then
          if type(Args[1]) == "string" then
             if Args[1] == "TeleportDetect" or Args[1]:lower() == "teleportdetect" then
                return wait(9e9)
             end
          end
       end
    end

    return Hook(self, ...)
end)

local DestroyCharacter = DataFolder.DestroyCharacter
local FindGroup = DataFolder.FindFirstGroup
local SafeFrames = DataFolder.Frames

local CurrentFrame = 1
local SwitchFrame = function()
   if SafeFrames[tostring(CurrentFrame + 1)] ~= nil then
       CurrentFrame = CurrentFrame + 1
   else
       CurrentFrame = 1
   end
end

if _G.CustomNotify == nil then
   _G.CustomNotify = DataFolder.CustomNotify
end

local Found, GroupID, GroupName = FindGroup()

if Found then
   _G.CustomNotify(1, "CRASHING", "USING GROUP: " .. GroupName:upper(), 10)
else
  _G.CustomNotify(3, "ERROR", "NO GROUP FOUND!", 10)
   
   return false
end

game:GetService("RunService").Stepped:Connect(function(...)
    DataFolder.Crash({
      ProxFunc = DataFolder.Proximity,
      ProxRange = _G.Proximity or 175,
      DestroyFunc = DestroyCharacter,
      GroupID = GroupID,
      FrameSwitchFunc = SwitchFrame,
      CurrentFrame = SafeFrames[tostring(CurrentFrame)]
    })
end)
